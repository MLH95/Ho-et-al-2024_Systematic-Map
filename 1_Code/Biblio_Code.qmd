---
title: "Bibliometric"
format: html
---


```{r}
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(viridis)
library(plotly)
library(networkD3)

```
Primary Question:
Load file

```{r}
CProvince <- read.csv("0_count_Province.csv")
CEcoRegion <- read.csv("0_count_EcoRegion.csv")
```
Secondary Questions

Figure 2b Year of publication
```{r}
year <- read.csv("0_year.csv")
ggplot(year, aes(x = year$Year.of.Publication, y = Num)) +
  labs( 
       x = "Publication Year",
       y = "Number of Studies") +
  theme(plot.title = element_text(hjust = 0.5))+
  theme(panel.background = element_rect(fill= 'white')) +
  theme(axis.text = element_text(size=24))+
  theme(axis.title.y = element_text(margin = margin(t=0, r=20, b=0, l=0), size = 24))+
  theme(axis.title.x = element_text(margin = margin(t=20, r=0, b=0, l=0), size = 24))+
  theme(axis.text.y = element_text(size=18))+
  theme(axis.text.x = element_text(size=18))+
  theme(axis.line.y = element_line(colour = 'black', size=0.5))+
  theme(axis.line.x = element_line(colour = 'black', size=0.5))+
  theme(plot.title = element_text(size=24))+
  theme(axis.text.x = element_text(angle = 90)) +
  scale_x_continuous(breaks = seq(from=2010, to=2023, by=1)) +
  scale_y_continuous(breaks = seq(from=0, to=12, by=1)) +
  geom_col()
ggsave("year.pdf", width = 6, height = 6, units = "in", device = "pdf")
```

Figure 3a Citation
```{r}
cite <- read.csv("0_citation.csv")
#par( mfrow= c(2, 1 ) )
ggplot(cite, aes(x = Year.of.Publication..YYYY., y = Number.of.Citations)) +
  geom_point(size=3) +
  labs(x = "Year of Publication", y = "Number of Citations") +
  theme(plot.title = element_text(hjust = 0.5))+
  theme(panel.background = element_rect(fill= 'white')) +
  theme(axis.text = element_text(size=24))+
  theme(axis.title.y = element_text(margin = margin(t=0, r=20, b=0, l=0), size = 24))+
  theme(axis.title.x = element_text(margin = margin(t=20, r=0, b=0, l=0), size = 24))+
  theme(axis.text.y = element_text(size=18))+
  theme(axis.text.x = element_text(size=18))+
  theme(axis.line.y = element_line(colour = 'black', size=0.5))+
  theme(axis.line.x = element_line(colour = 'black', size=0.5))+
  theme(plot.title = element_text(size=24))+
  theme(axis.text.x = element_text(angle = 90)) +geom_line(aes(y = 20), color = "red") +
  scale_x_continuous(breaks = seq(from=2010, to=2023, by=1),
                     limits = c(2010, 2023))
ggsave("citation.pdf", width = 6, height = 6, units = "in", device = "pdf") #, width = 6, height = 6, units = "in", device = "pdf")
```

Figure 3b Journal Number (Top three)
```{r}
journal <- read.csv("0_journal.csv")
MainJ <- subset(journal, Journal %in% c("Coral Reefs", "Frontiers in Marine Science", "Scientific Reports"))
ggplot(MainJ, aes(x = MainJ$Year.of.Publication..YYYY., fill = MainJ$Journal)) +
  geom_bar() +
  theme(panel.background = element_rect(fill= 'white')) +
  theme(axis.text = element_text(size=24))+
  theme(axis.title.y = element_text(margin = margin(t=0, r=20, b=0, l=0), size = 24))+
  theme(axis.title.x = element_text(margin = margin(t=20, r=0, b=0, l=0), size = 24))+
  theme(axis.text.y = element_text(size=18))+
  theme(axis.text.x = element_text(size=18))+
  theme(axis.line.y = element_line(colour = 'black', size=0.5))+
  theme(axis.line.x = element_line(colour = 'black', size=0.5))+
  theme(plot.title = element_text(size=24))+
  theme(axis.text.x = element_text(angle = 90), legend.position = "top", legend.justification = "center", legend.box = "horizontal", legend.text = element_text(size = 12)) +
  scale_x_continuous(breaks = seq(from=2010, to=2023, by=1),
                     limits = c(2010, 2023))+
  labs(x = "Year of Publication", y = "Number of Publication", fill = "Journal")
ggsave("mainJ.pdf", width = 6, height = 6, units = "in", device = "pdf")
```

Figure 3c Journal Number (Rest)
```{r}
ggplot(journal, aes(y = abbre)) +
  geom_bar(width = 0.5) +
  labs(x = "Number of Publication", y = "Journal") +
  theme(panel.background = element_rect(fill= 'white')) +
  theme(axis.text = element_text(size=12))+
  theme(axis.title.y = element_text(margin = margin(t=0, r=20, b=0, l=0), size = 12))+
  theme(axis.title.x = element_text(margin = margin(t=20, r=0, b=0, l=0), size = 12))+
  theme(axis.text.y = element_text(size=7))+
  theme(axis.text.x = element_text(size=12))+
  theme(axis.line.y = element_line(colour = 'black', size=0.5))+
  theme(axis.line.x = element_line(colour = 'black', size=0.5))+
  theme(plot.title = element_text(size=24))
ggsave("otherj.pdf",, width = 8, height = 6, units = "in", device = "pdf")

```


Figure 5 Province, ecoregion
```{r}
#Province plot, used for creating map bubble plot with eco region
ggplot(CProvince, aes(x = Province, y = CProvince$Number.of.Publication)) +
  geom_col() +
    labs(x = "Provinces", y = "Number of Studies") +
    theme(panel.background = element_rect(fill= 'white')) +
  theme(axis.text = element_text(size=12))+
  theme(axis.title.y = element_text(margin = margin(t=0, r=20, b=0, l=20), size = 24))+
  theme(axis.title.x = element_text(margin = margin(t=20, r=0, b=0, l=0), size = 24))+
  theme(axis.text.y = element_text(size=12))+
  theme(axis.text.x = element_text(size=12))+
  theme(axis.line.y = element_line(colour = 'black', size=0.5))+
  theme(axis.line.x = element_line(colour = 'black', size=0.5))+
  theme(plot.title = element_text(size=12)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("province2.pdf", width = 12, height = 6, units = "in")

#Eco Region bubble plot, used for creating map bubble plot
ggplot(CEcoRegion, aes(x = CEcoRegion$EcoRegion, y = CEcoRegion$Number.of.Publication, size = CEcoRegion$Number.of.Publication, fill = CEcoRegion$Number.of.Publication )) +
  geom_point(shape = 21, color = "black") +
  scale_size(range = c(2, 20)) +
  theme(axis.text.x = element_text(angle = 90)) +
  theme(axis.text.x = element_text(size = 6),
        plot.margin = margin(t = 1, r = 2, b = 1, l = 2, unit = "cm")) +
  scale_y_continuous(breaks = seq(0, 40, by = 1)) +
  scale_x_discrete(expand = c(0.2, 0.2))
scale_fill_viridis(discrete = FALSE, guide = FALSE, option = "A")
ggsave("EcoRegion_bubble.pdf", width = 21, height = 29.7, units = "cm", dpi = 300)
```

Figure 6 Proximity, MPA
```{r}
plot_size <- 8
# EEZ Proximity
donutEEZ <- data.frame(
  Proximity=c("Close/Territorial Sea", "Middle/Contiguous Zone", "Far/Exclusive Economic Zone", "Close/Territorial Sea and Middle/Contiguous Zone","Close/Territorial Sea and Far/Exclusive Economic Zone", "Close/Territorial Sea, Middle/Contiguous Zone and Far/Exclusive Economic Zone", "Not Specified"),
  count=c(61, 1, 11, 6, 2, 2, 10)
  )

donutEEZ$fraction = donutEEZ$count / sum(donutEEZ$count)

donutEEZ$ymax = cumsum(donutEEZ$fraction)

donutEEZ$ymin = c(0, head(donutEEZ$ymax, n=-1))

donutEEZplot <- ggplot(donutEEZ, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=Proximity))+
  geom_rect()+
    theme(panel.background = element_rect(fill= 'white')) +
  theme(text = element_text(size=12),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    legend.key.size = unit(plot_size / 12, "cm"))+
  coord_polar(theta = "y")+ 
  xlim(c(1,4))+
  scale_fill_viridis(discrete = TRUE)
donutEEZplot
ggsave("EEZDonut.pdf", donutEEZplot,  width = 12, height = 4, units = "in")

# Protected Area?
donutProtArea <- data.frame(
  Protected=c("Yes", "No", "Not Mentioned"),
  count=c(21, 38, 32)
  )

donutProtArea$fraction = donutProtArea$count / sum(donutProtArea$count)

donutProtArea$ymax = cumsum(donutProtArea$fraction)

donutProtArea$ymin = c(0, head(donutProtArea$ymax, n=-1))

donutProtAreaplot <- ggplot(donutProtArea, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=Protected))+
  geom_rect() +
    theme(panel.background = element_rect(fill= 'white')) +
  theme(text = element_text(size=12),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    legend.key.size = unit(plot_size / 12, "cm"))+
  coord_polar(theta = "y")+ 
  xlim(c(1,4))+
  scale_fill_viridis(discrete = TRUE)

donutProtAreaplot
ggsave("ProtectedAreaDonut.pdf", donutProtAreaplot, width = 12, height = 4, units = "in")
```

Figure 7 Temperature and Depth Data Plots
```{r}
# Method
donutterm1 <- data.frame(
  Methods=c("In-situ Collected/Derived Data","Satellite-derived Data","Other Method"),
  count=c(50, 28, 26)
  )

donutterm1$fraction = donutterm1$count / sum(donutterm1$count)

donutterm1$ymax = cumsum(donutterm1$fraction)

donutterm1$ymin = c(0, head(donutterm1$ymax, n=-1))

donuttermplot1 <-   ggplot(donutterm1, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=Methods))+
  geom_rect() +
    theme(panel.background = element_rect(fill= 'white')) +
  theme(text = element_text(size=12),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank())+
  coord_polar(theta = "y")+ 
  xlim(c(1,4))+
  scale_fill_viridis(discrete = TRUE)
ggsave("TempRecMethod.pdf", donuttermplot1, width = 6, height = 4, units = "in")

# Equipment
donutterm2 <- data.frame(
  category=c("Digital Thermometer","Dive Computer", "Mercury Thermometer", "NOAA National Buoy Center", "Monitoring Sites","Not mentioned", "ROV", "Temperature Logger", "T-MEDNet"),
  count=c(1, 2, 1, 2, 1, 13, 2, 26, 1)
  )

donutterm2$fraction = donutterm2$count / sum(donutterm2$count)

donutterm2$ymax = cumsum(donutterm2$fraction)

donutterm2$ymin = c(0, head(donutterm2$ymax, n=-1))

donuttermplot2 <-  ggplot(donutterm2, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=Equipment))+
  geom_rect() +
    theme(panel.background = element_rect(fill= 'white')) +
  theme(text = element_text(size=12),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank())+
  coord_polar(theta = "y")+ 
  xlim(c(1,4))+
  scale_fill_viridis(discrete = TRUE)
ggsave("TempRecEquip.pdf", donuttermplot2, width = 6, height = 4, units = "in")

# Depth
depth <- read.csv("0_depth.csv")
#depth <- depth %>% arrange(desc("Depth"))

ggplot(depth, aes(x = Depth, y = count)) +
  geom_col(width = 0.5) +
  labs(x = "Depth (m)",
       y = "Number of Studies") +
    theme(panel.background = element_rect(fill= 'white')) +
  theme(axis.text = element_text(size=12))+
  theme(axis.title.y = element_text(margin = margin(t=0, r=20, b=0, l=20), size = 18))+
  theme(axis.title.x = element_text(margin = margin(t=20, r=0, b=0, l=0), size = 18))+
  theme(axis.text.y = element_text(size=18))+
  theme(axis.text.x = element_text(size=18))+
  theme(axis.line.y = element_line(colour = 'black', size=0.5))+
  theme(axis.line.x = element_line(colour = 'black', size=0.5))+
  theme(plot.title = element_text(size=12)) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  theme(axis.text.y = element_text(angle = 90, hjust = 1))
ggsave("Depth.pdf", width = 6, height = 8, units = "in", dpi = 300)
```

Figure 8 Concurrent, Environmental Parameters Plot
```{r}
# Study period and event period collide?
EventStudy <- data.frame(
  Category=c("Yes", "No", "Not focusing on weather event"),
  count=c(17, 2, 72)
  )

EventStudy$fraction = EventStudy$count / sum(EventStudy$count)

EventStudy$ymax = cumsum(EventStudy$fraction)

EventStudy$ymin = c(0, head(EventStudy$ymax, n=-1))

EventStudyPlot <- ggplot(EventStudy, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=Category))+
  geom_rect()+
    theme(panel.background = element_rect(fill= 'white')) +
  theme(text = element_text(size=12),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank())+
  coord_polar(theta = "y")+ 
  xlim(c(1,4))+
  scale_fill_viridis(discrete = TRUE)
EventStudyPlot
ggsave("EventStudy.pdf", EventStudyPlot, width = 6, height = 4, units = "in")


EnvPara <- read.csv("0_Parameter.csv")
ggplot(EnvPara, aes(x = Count, y = Parameter)) +
  labs(x = "Environmental Parameters",
       y = "Number of Studies") +
  geom_col() +
    theme(panel.background = element_rect(fill= 'white')) +
  theme(axis.text = element_text(size=12))+
  theme(axis.title.y = element_text(margin = margin(t=0, r=20, b=0, l=0), size = 16))+
  theme(axis.title.x = element_text(margin = margin(t=20, r=0, b=0, l=0), size = 16))+
  theme(axis.text.y = element_text(size=10))+
  theme(axis.text.x = element_text(size=10))+
  theme(axis.line.y = element_line(colour = 'black', size=0.5))+
  theme(axis.line.x = element_line(colour = 'black', size=0.5))+
  theme(plot.title = element_text(size=12))
ggsave("EnvPara.pdf", width = 8, height = 4, units = "in")
```

Figure 10a, 10b Outcome/Prediction Category
```{r}
# Outcome/Prediction Donut Plot
donutterm3 <- data.frame(
  Category=c("Outcome", "Prediction", "Both"),
  count=c(69, 13, 9)
  )

donutterm3$fraction = donutterm3$count / sum(donutterm3$count)

donutterm3$ymax = cumsum(donutterm3$fraction)

donutterm3$ymin = c(0, head(donutterm3$ymax, n=-1))

donuttermplot3 <- ggplot(donutterm3, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=Category))+
  geom_rect()+
    theme(panel.background = element_rect(fill= 'white')) +
  theme(text = element_text(size=12),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank())+
  coord_polar(theta = "y")+ 
  xlim(c(1,4))+
  scale_fill_viridis(discrete = TRUE)

donuttermplot3
ggsave("OutcomePrediction.pdf", donuttermplot3, width = 6, height = 4, units = "in")


OutPre <- read.csv("0_outcomepredictioncategory.csv")
ggplot(OutPre, aes(y = OutPre$Category.of.results)) +
  geom_bar() +
  labs(x = "Number of Publication", y = "Category") +
    theme(panel.background = element_rect(fill= 'white')) +
  theme(axis.text = element_text(size=12))+
  theme(axis.title.y = element_text(margin = margin(t=0, r=20, b=0, l=0), size = 12))+
  theme(axis.title.x = element_text(margin = margin(t=20, r=0, b=0, l=0), size = 12))+
  theme(axis.text.y = element_text(size=8))+
  theme(axis.text.x = element_text(size=8))+
  theme(axis.line.y = element_line(colour = 'black', size=0.5))+
  theme(axis.line.x = element_line(colour = 'black', size=0.5))+
  theme(plot.title = element_text(size=12))
ggsave("outprecat.pdf", width = 6, height = 4, units = "in")

```

Figure 11 Stressor and Severity
```{r}
# Stressor
Stressor <- read.csv("0_Stressor.csv")
ggplot(Stressor, aes(x = count, y = reorder(Stressor, count))) +
  geom_col() +
  labs(x = "Number of Publications",
      y = "Driver") +
      theme(panel.background = element_rect(fill= 'white')) +
  theme(axis.text = element_text(size=12))+
  theme(axis.title.y = element_text(margin = margin(t=0, r=20, b=0, l=20), size = 18))+
  theme(axis.title.x = element_text(margin = margin(t=20, r=0, b=0, l=0), size = 18))+
  theme(axis.text.y = element_text(size=12))+
  theme(axis.text.x = element_text(size=12))+
  theme(axis.line.y = element_line(colour = 'black', size=0.5))+
  theme(axis.line.x = element_line(colour = 'black', size=0.5))+
  theme(plot.title = element_text(size=12))
ggsave("Stressors.pdf", width = 8, height = 4, units = "in")

# Severity
Severity <- data.frame(
  category=c("Bleaching Warning (1 to 4 DHW)", "Bleaching Alert Level 1 (>4 DHW)", "Bleaching Alert Level 2 (>8 DHW)", "Bleaching Alert Level 3 (>12 DHW)", "Bleaching Alert Level 4 (>16 DHW)", "Bleaching Alert Level 5 (>20 DHW)", "Bleaching Level not specified", "MHW Moderate", "MHW Strong", "MHW Severe", "MHW Intensity not specified"),
  count=c(3, 3, 0, 1, 2, 2, 5, 1, 1, 1, 6)
  ) 
Severity$category <- factor(Severity$category, levels = c("Bleaching Warning (1 to 4 DHW)", "Bleaching Alert Level 1 (>4 DHW)", "Bleaching Alert Level 2 (>8 DHW)", "Bleaching Alert Level 3 (>12 DHW)", "Bleaching Alert Level 4 (>16 DHW)", "Bleaching Alert Level 5 (>20 DHW)", "Bleaching Level not specified", "MHW Moderate", "MHW Strong", "MHW Severe", "MHW Intensity not specified"))
ggplot(Severity, aes(x = count, y = category)) +
  geom_col() +
  labs(x = "Number of Publication",
       y = "Severity") +
      theme(panel.background = element_rect(fill= 'white')) +
  theme(axis.text = element_text(size=12))+
  theme(axis.title.y = element_text(margin = margin(t=0, r=20, b=0, l=20), size = 18))+
  theme(axis.title.x = element_text(margin = margin(t=20, r=0, b=0, l=0), size = 18))+
  theme(axis.text.y = element_text(size=12))+
  theme(axis.text.x = element_text(size=12))+
  theme(axis.line.y = element_line(colour = 'black', size=0.5))+
  theme(axis.line.x = element_line(colour = 'black', size=0.5))+
  theme(plot.title = element_text(size=12))
ggsave("Severity.pdf", width = 8, height = 4, units = "in")
```



Unused:
#Development status
donutEcon <- data.frame(
  category=c("Developed Economies", "Developing Economies", "Economies in Transition", "Fuel-exporting Countries", "Developed and Developing Economies", "Developed Economies and Economies in Transition"),
  count=c(56, 31, 0, 1, 1, 1)
  )

donutEcon$fraction = donutEcon$count / sum(donutEcon$count)

donutEcon$ymax = cumsum(donutEcon$fraction)

donutEcon$ymin = c(0, head(donutEcon$ymax, n=-1))

donutEconplot <- ggplot(donutEcon, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category))+
  geom_rect()+
  coord_polar(theta = "y")+ 
  xlim(c(1,4))+
  theme_void()

donutEconplot
ggsave("DonutEcon.pdf", donutEconplot, width = 29.7, height = 21, units = "cm", dpi = 300)

# Coastal, Inland or Offshore?
donutGeo <- data.frame(
  category=c("Coastal", "Island", "Offshore (Shelf Water)", "Coastal and Island", "Coastal and Offshore (Shelf Water)", "Island and Offshore (Shelf Water)", "Coastal, Island and Offshore (Shelf Water)"),
  count=c(44, 23, 4, 11, 1, 3, 5)
  )

donutGeo$fraction = donutGeo$count / sum(donutGeo$count)

donutGeo$ymax = cumsum(donutGeo$fraction)

donutGeo$ymin = c(0, head(donutGeo$ymax, n=-1))

donutGeoplot <- ggplot(donutGeo, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category))+
  geom_rect()+
  coord_polar(theta = "y")+ 
  xlim(c(1,4))+
  theme_void()

donutGeoplot
ggsave("GeoDonut.pdf", donutGeoplot, width = 29.7, height = 21, units = "cm", dpi = 300)

# Study type
donutterm4 <- data.frame(
  category=c("Observational", "Experimental", "Modelling/Simulation", "Experimental and Observational", "Experimental and Modelling/Simulation", "Observational and Modelling/Simulation"),
  count=c(44, 35, 1, 7, 1, 3)
  )

donutterm4$fraction = donutterm4$count / sum(donutterm4$count)

donutterm4$ymax = cumsum(donutterm4$fraction)

donutterm4$ymin = c(0, head(donutterm4$ymax, n=-1))

donuttermplot4 <- ggplot(donutterm4, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category))+
  geom_rect()+
  coord_polar(theta = "y")+ 
  xlim(c(1,4))+
  theme_void()

donuttermplot4
ggsave("StudyType.pdf", donuttermplot4)

# Temperature Data Availability
TempAvail <- data.frame(
  category=c("Yes", "No"),
  count=c(40, 51)
  )

TempAvail$fraction = TempAvail$count / sum(TempAvail$count)

TempAvail$ymax = cumsum(TempAvail$fraction)

TempAvail$ymin = c(0, head(TempAvail$ymax, n=-1))

TempAvailPlot <- ggplot(TempAvail, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category))+
  geom_rect()+
  coord_polar(theta = "y")+ 
  xlim(c(1,4))+
  theme_void()

TempAvailPlot
ggsave("TempAvail.pdf", TempAvailPlot)
